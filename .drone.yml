pipeline:
  build_docker_image:
    image: docker:17.09.0-ce
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build -t nginx:$${DRONE_COMMIT_SHA} .

  test:
    image: docker:17.09.0-ce
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
      - NGINX_CONFIG_FILE=/nginx.conf
    commands:
      - set -x
      - docker ps -a --filter "name=nginx-test" | grep nginx-test && docker stop nginx-test && docker rm nginx-test || echo "nginx-test container not found..."
      - docker run --name nginx-test -e NGINX_CONFIG_FILE=/nginx.conf -v $${PWD}/tests/nginx.conf:/nginx.conf -d nginx:$${DRONE_COMMIT_SHA}
      - sleep 3
      - apk update && apk add curl
      - docker ps -a --filter "name=nginx-test" --filter "status=exited" | grep nginx-test && docker logs nginx-test || echo "The container started successfully?"
#      - curl http://$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' nginx-test)
      - curl -s -f http://172.17.0.1:10080
      
  latest_image_to_quay:
    image: docker:17.09.0-ce
    secrets:
      - docker_password
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+drone_nginx" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag nginx:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/nginx:latest
      - docker tag nginx:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/nginx:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/nginx:latest
      - docker push quay.io/ukhomeofficedigital/nginx:$${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master
 
  tag_image_to_quay:
    image: docker:17.09.0-ce
    secrets:
      - docker_password
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+drone_nginx" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag nginx:$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/nginx:$${DRONE_TAG}
      - docker push quay.io/ukhomeofficedigital/nginx:$${DRONE_TAG}
    when:
      event: tag
